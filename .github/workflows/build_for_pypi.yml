name: Build and Optionally Publish to PyPi

on:
  workflow_call:
    inputs:
      publish:
        type: boolean
        default: false
        description: "Publish to PyPi"

jobs:
  build_for_pypi:
    name: Build wheels on ${{ matrix.os }} ${{ matrix.cibw_arch }}
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read  # This is required for actions/checkout
    strategy:
      matrix:
        include:
          - { os: windows-latest, cibw_arch: AMD64 }
          - { os: ubuntu-latest,  cibw_arch: x86_64 }
          - { os: ubuntu-latest,  cibw_arch: aarch64, qemu_arch: arm64 }
          - { os: macos-latest,   cibw_arch: arm64 }
          - { os: macos-latest,   cibw_arch: x86_64 }

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Set up QEMU
        if: matrix.qemu_arch != ''
        uses: docker/setup-qemu-action@v3
        with:
          platforms: matrix.qemu_arch

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.20.0
        env:
          CIBW_ARCHS: ${{matrix.cibw_arch}}
          # 20 Aug 2024: Building wheels for PyPy fails, so skip
          CIBW_SKIP: pp*

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    permissions:
      contents: read  # This is required for actions/checkout
    steps:
      - uses: actions/checkout@v4

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_for_pypi, build_sdist]
    runs-on: ubuntu-latest
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read  # This is required for actions/checkout
    steps:
      - uses: actions/download-artifact@v4
        with:
          # unpacks all CIBW artifacts into dist/
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - name: Publish package to PyPI
        if: inputs.publish == true
        uses: pypa/gh-action-pypi-publish@release/v1
