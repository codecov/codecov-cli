name: Create CLI Release

on:
  pull_request:
    branches:
      - release
    types: [closed]

jobs:
  create-release:
    if: ${{ github.event.pull_request.merged == true && startsWith(github.head_ref, 'release/') && github.repository_owner == 'codecov' }}
    name: Create Github Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: get-release-vars
        name: Configure Release Vars
        run: |
          echo release_version=$(grep -E "version=\"[0-9]\.[0-9]\.[0-9]\"" setup.py | grep -Eo "[0-9]\.[0-9]\.[0-9]") >> "$GITHUB_OUTPUT"

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.CODECOV_RELEASE_PAT }}
        run: |
          gh release create v${{ steps.get-release-vars.outputs.release_version }} --title "Release v${{ steps.get-release-vars.outputs.release_version }}" --notes "Autogenerated for v${{ steps.get-release-vars.outputs.release_version }}. Created for ${{ github.event.pull_request.html_url }}" --generate-notes --target ${{ github.event.pull_request.head.sha }}

  update-main:
    permissions:
      contents: write
      id-token: write
    needs: create-release
    name: Update main
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Import GPG key
        id: import-gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.RELEASER_GPG_PRIVATE_KEY }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_config_global: true

      - name: Update main and push
        run: |
          git merge release
          git push origin main -f
