# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build-and-Release

on:
  push:
    tags:
      - 'v*' # Runs only for tags that start with v (new versions)

jobs:
  createrelease:
    name: Create Release
    runs-on: [ubuntu-latest]
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Output Release URL File
      run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
    - name: Save Release URL File for publish
      uses: actions/upload-artifact@v1
      with:
        name: release_url
        path: release_url.txt

        
    - name: Build executable with pyinstaller 
      run: |
        pip install pyinstaller
        pyinstaller -F codecov_cli/main.py

  build-assets:
    name: Build packages
    needs: createrelease
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            TARGET: macos
            CMD_BUILD: >
              pyinstaller -F codecov_cli/main.py &&
              cd dist/ &&
              zip -r9 codecovcli_macos_${{github.ref}} main.app/
            OUT_FILE_NAME: codecovcli_macos_${{github.ref}}.zip
            ASSET_MIME: application/zip
          - os: ubuntu-latest
            TARGET: ubuntu
            CMD_BUILD: >
              pyinstaller -F codecov_cli/main.py &&
              cp ./dist/main ./dist/codecovcli_linux_${{github.ref}}       
            OUT_FILE_NAME: codecovcli_linux_${{github.ref}}
            ASSET_MIME: application/octet-stream
          - os: windows-latest
            TARGET: windows
            CMD_BUILD: >
              pyinstaller -F codecov_cli/main.py &&
              cp ./dist/main.exe ./dist/codecovcli_windows_${{github.ref}}.exe
            OUT_FILE_NAME: codecovcli_windows_${{github.ref}}.exe
            ASSET_MIME: application/vnd.microsoft.portable-executable
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"     
    - name: Install pyinstaller
      run: pip install pyinstaller
    - name: Build with pyinstaller for ${{matrix.TARGET}}
      run: ${{matrix.CMD_BUILD}}
    - name: Load Release URL File from release job
      uses: actions/download-artifact@v1
      with:
        name: release_url
    - name: Get Release File Name & Upload URL
      id: get_release_info
      shell: bash
      run: |
        value=`cat release_url/release_url.txt`
        echo ::set-output name=upload_url::$value        
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: ./dist/${{ matrix.OUT_FILE_NAME }}
        asset_name: ${{ matrix.OUT_FILE_NAME }}
        asset_content_type: ${{ matrix.ASSET_MIME }}
    